/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package cimgui.internal;

public class STB_TexteditState {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  public STB_TexteditState(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(STB_TexteditState obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        CImGuiJNI.delete_STB_TexteditState(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setCursor(int value) {
    CImGuiJNI.STB_TexteditState_cursor_set(swigCPtr, this, value);
  }

  public int getCursor() {
    return CImGuiJNI.STB_TexteditState_cursor_get(swigCPtr, this);
  }

  public void setSelect_start(int value) {
    CImGuiJNI.STB_TexteditState_select_start_set(swigCPtr, this, value);
  }

  public int getSelect_start() {
    return CImGuiJNI.STB_TexteditState_select_start_get(swigCPtr, this);
  }

  public void setSelect_end(int value) {
    CImGuiJNI.STB_TexteditState_select_end_set(swigCPtr, this, value);
  }

  public int getSelect_end() {
    return CImGuiJNI.STB_TexteditState_select_end_get(swigCPtr, this);
  }

  public void setInsert_mode(short value) {
    CImGuiJNI.STB_TexteditState_insert_mode_set(swigCPtr, this, value);
  }

  public short getInsert_mode() {
    return CImGuiJNI.STB_TexteditState_insert_mode_get(swigCPtr, this);
  }

  public void setCursor_at_end_of_line(short value) {
    CImGuiJNI.STB_TexteditState_cursor_at_end_of_line_set(swigCPtr, this, value);
  }

  public short getCursor_at_end_of_line() {
    return CImGuiJNI.STB_TexteditState_cursor_at_end_of_line_get(swigCPtr, this);
  }

  public void setInitialized(short value) {
    CImGuiJNI.STB_TexteditState_initialized_set(swigCPtr, this, value);
  }

  public short getInitialized() {
    return CImGuiJNI.STB_TexteditState_initialized_get(swigCPtr, this);
  }

  public void setHas_preferred_x(short value) {
    CImGuiJNI.STB_TexteditState_has_preferred_x_set(swigCPtr, this, value);
  }

  public short getHas_preferred_x() {
    return CImGuiJNI.STB_TexteditState_has_preferred_x_get(swigCPtr, this);
  }

  public void setSingle_line(short value) {
    CImGuiJNI.STB_TexteditState_single_line_set(swigCPtr, this, value);
  }

  public short getSingle_line() {
    return CImGuiJNI.STB_TexteditState_single_line_get(swigCPtr, this);
  }

  public void setPadding1(short value) {
    CImGuiJNI.STB_TexteditState_padding1_set(swigCPtr, this, value);
  }

  public short getPadding1() {
    return CImGuiJNI.STB_TexteditState_padding1_get(swigCPtr, this);
  }

  public void setPadding2(short value) {
    CImGuiJNI.STB_TexteditState_padding2_set(swigCPtr, this, value);
  }

  public short getPadding2() {
    return CImGuiJNI.STB_TexteditState_padding2_get(swigCPtr, this);
  }

  public void setPadding3(short value) {
    CImGuiJNI.STB_TexteditState_padding3_set(swigCPtr, this, value);
  }

  public short getPadding3() {
    return CImGuiJNI.STB_TexteditState_padding3_get(swigCPtr, this);
  }

  public void setPreferred_x(float value) {
    CImGuiJNI.STB_TexteditState_preferred_x_set(swigCPtr, this, value);
  }

  public float getPreferred_x() {
    return CImGuiJNI.STB_TexteditState_preferred_x_get(swigCPtr, this);
  }

  public void setUndostate(StbUndoState value) {
    CImGuiJNI.STB_TexteditState_undostate_set(swigCPtr, this, StbUndoState.getCPtr(value), value);
  }

  public StbUndoState getUndostate() {
    long cPtr = CImGuiJNI.STB_TexteditState_undostate_get(swigCPtr, this);
    return (cPtr == 0) ? null : new StbUndoState(cPtr, false);
  }

  public STB_TexteditState() {
    this(CImGuiJNI.new_STB_TexteditState(), true);
  }

}
