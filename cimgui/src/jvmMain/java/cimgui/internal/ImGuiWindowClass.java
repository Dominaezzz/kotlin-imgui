/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package cimgui.internal;

public class ImGuiWindowClass {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  public ImGuiWindowClass(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(ImGuiWindowClass obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        CImGuiJNI.delete_ImGuiWindowClass(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setClassId(long value) {
    CImGuiJNI.ImGuiWindowClass_ClassId_set(swigCPtr, this, value);
  }

  public long getClassId() {
    return CImGuiJNI.ImGuiWindowClass_ClassId_get(swigCPtr, this);
  }

  public void setParentViewportId(long value) {
    CImGuiJNI.ImGuiWindowClass_ParentViewportId_set(swigCPtr, this, value);
  }

  public long getParentViewportId() {
    return CImGuiJNI.ImGuiWindowClass_ParentViewportId_get(swigCPtr, this);
  }

  public void setViewportFlagsOverrideSet(int value) {
    CImGuiJNI.ImGuiWindowClass_ViewportFlagsOverrideSet_set(swigCPtr, this, value);
  }

  public int getViewportFlagsOverrideSet() {
    return CImGuiJNI.ImGuiWindowClass_ViewportFlagsOverrideSet_get(swigCPtr, this);
  }

  public void setViewportFlagsOverrideClear(int value) {
    CImGuiJNI.ImGuiWindowClass_ViewportFlagsOverrideClear_set(swigCPtr, this, value);
  }

  public int getViewportFlagsOverrideClear() {
    return CImGuiJNI.ImGuiWindowClass_ViewportFlagsOverrideClear_get(swigCPtr, this);
  }

  public void setDockNodeFlagsOverrideSet(int value) {
    CImGuiJNI.ImGuiWindowClass_DockNodeFlagsOverrideSet_set(swigCPtr, this, value);
  }

  public int getDockNodeFlagsOverrideSet() {
    return CImGuiJNI.ImGuiWindowClass_DockNodeFlagsOverrideSet_get(swigCPtr, this);
  }

  public void setDockNodeFlagsOverrideClear(int value) {
    CImGuiJNI.ImGuiWindowClass_DockNodeFlagsOverrideClear_set(swigCPtr, this, value);
  }

  public int getDockNodeFlagsOverrideClear() {
    return CImGuiJNI.ImGuiWindowClass_DockNodeFlagsOverrideClear_get(swigCPtr, this);
  }

  public void setDockingAlwaysTabBar(boolean value) {
    CImGuiJNI.ImGuiWindowClass_DockingAlwaysTabBar_set(swigCPtr, this, value);
  }

  public boolean getDockingAlwaysTabBar() {
    return CImGuiJNI.ImGuiWindowClass_DockingAlwaysTabBar_get(swigCPtr, this);
  }

  public void setDockingAllowUnclassed(boolean value) {
    CImGuiJNI.ImGuiWindowClass_DockingAllowUnclassed_set(swigCPtr, this, value);
  }

  public boolean getDockingAllowUnclassed() {
    return CImGuiJNI.ImGuiWindowClass_DockingAllowUnclassed_get(swigCPtr, this);
  }

  public ImGuiWindowClass() {
    this(CImGuiJNI.new_ImGuiWindowClass(), true);
  }

}
